.text
start:
.globl start
  #t0 - адресный указатель для прохода по словарю
  #t1 - адресный указатель для прохода по инпуту
  #a0 - для формирования результата
  #a1 - для посимвольного считывания словаря
  #a2 - для посимвольного считывания инпута
  #t2 - для формирования числа
  #t3 - используется для умножения на 10
  #t4 - адрес откуда начинать записывать числа
  #s0 - константа для пробела
  #s1 - константа для L 
  li s0, 0x20
  li s1, 0x4c
  la t1, input_string 
  lb a2, t1, 0
  la t4, output
  loop: 
  la t0, dictionary 
  andi t2, x0, 0
    loop1: # считываем первый символ
      lb a1, t0, 0  
      addi t0, t0, 2 
      bne a2, a1, loop1 
      lb a0, t0, -1 #пишем в а0 5 бит означающих в эдсаке первый символ
      slli a0, a0, 11
    loop1_exit:
    addi t1, t1, 1
    loop2: # считываем число
      #считываем следующий символ инпута
      lb a2, t1, 0
      #если пробел, считываем ещё один
      bne a2, s0, else
      addi t1, t1, 1
      lb a2, t1, 0
      else:#если не пробел то умножаем t2 на 10 
      #и прибавляем к t2 ещё число из инпута
      #умножаем t2 на 10 
      beq t2, x0, read_new
      addi t3, t2, 0 #положили t2 в t3
      slli t3, t3, 2 #сдвинули
      add t3, t3, t2 #опять прибавили t2 в t3
      slli t3, t3, 1 #сдвинули
      addi t2, t3, 0 #положили в t2 результат
      read_new:
      #прибавляем к t2 ещё число из инпута
      add t2, t2, a2
      addi t2, t2, -48 #скорректировали ascii
      #считываем следующий символ
      #если не пробел, то идем в else
      addi t1, t1, 1
      lb a2, t1, 0
      bne a2, s0, else
      add a0, a0, t2
      slli a0, a0, 1
    loop2_exit:
    #Считывание последнего символа
    loop3:
    addi t1, t1, 1
    lb a2, t1, 0
    bne a2, s1, not_l
    addi a0, a0, 1 
    not_l:
    addi t1, t1, 2
    lb a2, t1, 0
    sw a0, 0(t4)
    addi t4, t4, 4 
    bne a2, x0, loop
  loop_exit:
  li x10, 17
  li x11, 0
  ecall

.data
dictionary:
  .word 0x01510050, 0x03450257, 0x05540452, 0x07550659, 0x094F0849, 0x0b230a4a, 0x0d5a0c53, 0x0f210e4b, 0x1146102e, 0x13441240, 0x15481421, 0x174d164e, 0x194c1826, 0x1b471a58, 0x1d421c41, 0x1f561e43
input_string:
  .string "E 12 L P 8 S Q 64 L E 12 L "
output: